{"ast":null,"code":"/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\nfunction TrapFocus(props) {\n  var children = props.children,\n    _props$disableAutoFoc = props.disableAutoFocus,\n    disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$disableEnforce = props.disableEnforceFocus,\n    disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n    _props$disableRestore = props.disableRestoreFocus,\n    disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n    getDoc = props.getDoc,\n    isEnabled = props.isEnabled,\n    open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var lastFocus = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open) {\n      return;\n    }\n    lastFocus.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, ['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n')) : void 0;\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n      rootRef.current.focus();\n    }\n    var enforceFocus = function enforceFocus() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next enforceFocus as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n    doc.addEventListener('focus', enforceFocus, true);\n    doc.addEventListener('keydown', loopFocus, true);\n    return function () {\n      doc.removeEventListener('focus', enforceFocus, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in lastFocus.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (lastFocus.current && lastFocus.current.focus) {\n          lastFocus.current.focus();\n        }\n        lastFocus.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n/**\n * @ignore - internal component.\n */\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n  /**\n   * Do we still want to enforce the focus?\n   * This property helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default TrapFocus;","map":{"version":3,"names":["React","ReactDOM","PropTypes","warning","ownerDocument","useForkRef","TrapFocus","props","children","_props$disableAutoFoc","disableAutoFocus","_props$disableEnforce","disableEnforceFocus","_props$disableRestore","disableRestoreFocus","getDoc","isEnabled","open","ignoreNextEnforceFocus","useRef","sentinelStart","sentinelEnd","lastFocus","rootRef","handleOwnRef","useCallback","instance","current","findDOMNode","handleRef","ref","useMemo","activeElement","useEffect","doc","contains","hasAttribute","process","env","NODE_ENV","join","setAttribute","focus","enforceFocus","loopFocus","event","keyCode","shiftKey","addEventListener","removeEventListener","createElement","Fragment","tabIndex","cloneElement","propTypes","element","isRequired","bool","func"],"sources":["/Users/tristan15/Documents/GitHub/newdata03/node_modules/@material-ui/core/esm/Modal/TrapFocus.js"],"sourcesContent":["/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var lastFocus = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open) {\n      return;\n    }\n\n    lastFocus.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, ['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n')) : void 0;\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var enforceFocus = function enforceFocus() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next enforceFocus as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', enforceFocus, true);\n    doc.addEventListener('keydown', loopFocus, true);\n    return function () {\n      doc.removeEventListener('focus', enforceFocus, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in lastFocus.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (lastFocus.current && lastFocus.current.focus) {\n          lastFocus.current.focus();\n        }\n\n        lastFocus.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n/**\n * @ignore - internal component.\n */\n\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This property helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default TrapFocus;"],"mappings":"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"},"metadata":{},"sourceType":"module"}