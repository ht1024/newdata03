{"ast":null,"code":"// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\nvar inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar cachedType;\nexport function _setScrollType(type) {\n  cachedType = type;\n}\n// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n  if (!inDOM || !window.document.body) {\n    return 'indeterminate';\n  }\n  var dummy = window.document.createElement('div');\n  dummy.appendChild(document.createTextNode('ABCD'));\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n  document.body.removeChild(dummy);\n  return cachedType;\n}\n// Based on https://stackoverflow.com/a/24394376\nexport function getNormalizedScrollLeft(element, direction) {\n  var scrollLeft = element.scrollLeft;\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n  var type = detectScrollType();\n  if (type === 'indeterminate') {\n    return Number.NaN;\n  }\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n  }\n  return scrollLeft;\n}\nexport function setNormalizedScrollLeft(element, scrollLeft, direction) {\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n  if (direction !== 'rtl') {\n    element.scrollLeft = scrollLeft;\n    return;\n  }\n  var type = detectScrollType();\n  if (type === 'indeterminate') {\n    return;\n  }\n  switch (type) {\n    case 'negative':\n      element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n      break;\n    case 'reverse':\n      element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n      break;\n    default:\n      element.scrollLeft = scrollLeft;\n      break;\n  }\n}","map":{"version":3,"names":["inDOM","window","document","createElement","cachedType","_setScrollType","type","detectScrollType","body","dummy","appendChild","createTextNode","dir","style","fontSize","width","height","position","top","overflow","scrollLeft","removeChild","getNormalizedScrollLeft","element","direction","Number","NaN","scrollWidth","clientWidth","setNormalizedScrollLeft"],"sources":["/Users/tristan15/Documents/GitHub/newdata03/node_modules/normalize-scroll-left/esm/main.js"],"sourcesContent":["// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\r\nvar inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\nvar cachedType;\r\nexport function _setScrollType(type) {\r\n    cachedType = type;\r\n}\r\n// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\r\nexport function detectScrollType() {\r\n    if (cachedType) {\r\n        return cachedType;\r\n    }\r\n    if (!inDOM || !window.document.body) {\r\n        return 'indeterminate';\r\n    }\r\n    var dummy = window.document.createElement('div');\r\n    dummy.appendChild(document.createTextNode('ABCD'));\r\n    dummy.dir = 'rtl';\r\n    dummy.style.fontSize = '14px';\r\n    dummy.style.width = '4px';\r\n    dummy.style.height = '1px';\r\n    dummy.style.position = 'absolute';\r\n    dummy.style.top = '-1000px';\r\n    dummy.style.overflow = 'scroll';\r\n    document.body.appendChild(dummy);\r\n    cachedType = 'reverse';\r\n    if (dummy.scrollLeft > 0) {\r\n        cachedType = 'default';\r\n    }\r\n    else {\r\n        dummy.scrollLeft = 1;\r\n        if (dummy.scrollLeft === 0) {\r\n            cachedType = 'negative';\r\n        }\r\n    }\r\n    document.body.removeChild(dummy);\r\n    return cachedType;\r\n}\r\n// Based on https://stackoverflow.com/a/24394376\r\nexport function getNormalizedScrollLeft(element, direction) {\r\n    var scrollLeft = element.scrollLeft;\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        return scrollLeft;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return Number.NaN;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            return element.scrollWidth - element.clientWidth + scrollLeft;\r\n        case 'reverse':\r\n            return element.scrollWidth - element.clientWidth - scrollLeft;\r\n    }\r\n    return scrollLeft;\r\n}\r\nexport function setNormalizedScrollLeft(element, scrollLeft, direction) {\r\n    // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\r\n    if (direction !== 'rtl') {\r\n        element.scrollLeft = scrollLeft;\r\n        return;\r\n    }\r\n    var type = detectScrollType();\r\n    if (type === 'indeterminate') {\r\n        return;\r\n    }\r\n    switch (type) {\r\n        case 'negative':\r\n            element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\r\n            break;\r\n        case 'reverse':\r\n            element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\r\n            break;\r\n        default:\r\n            element.scrollLeft = scrollLeft;\r\n            break;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}