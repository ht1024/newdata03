{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n    _props$defer = props.defer,\n    defer = _props$defer === void 0 ? false : _props$defer,\n    _props$fallback = props.fallback,\n    fallback = _props$fallback === void 0 ? null : _props$fallback;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mountedState = _React$useState2[0],\n    setMountedState = _React$useState2[1];\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport default NoSsr;","map":{"version":3,"names":["_slicedToArray","React","PropTypes","exactProp","useEnhancedEffect","window","process","env","NODE_ENV","useLayoutEffect","useEffect","NoSsr","props","children","_props$defer","defer","_props$fallback","fallback","_React$useState","useState","_React$useState2","mountedState","setMountedState","createElement","Fragment","propTypes","node","isRequired","bool"],"sources":["/Users/tristan15/Documents/GitHub/newdata03/node_modules/@material-ui/core/esm/NoSsr/NoSsr.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nvar useEnhancedEffect = typeof window !== 'undefined' && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nfunction NoSsr(props) {\n  var children = props.children,\n      _props$defer = props.defer,\n      defer = _props$defer === void 0 ? false : _props$defer,\n      _props$fallback = props.fallback,\n      fallback = _props$fallback === void 0 ? null : _props$fallback;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountedState = _React$useState2[0],\n      setMountedState = _React$useState2[1];\n\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return React.createElement(React.Fragment, null, mountedState ? children : fallback);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes = {\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,IAAIC,iBAAiB,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,GAAGP,KAAK,CAACQ,eAAe,GAAGR,KAAK,CAACS,SAAS;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAK,CAACC,KAAK,EAAE;EACpB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,YAAY,GAAGF,KAAK,CAACG,KAAK;IAC1BA,KAAK,GAAGD,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,YAAY;IACtDE,eAAe,GAAGJ,KAAK,CAACK,QAAQ;IAChCA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,eAAe;EAElE,IAAIE,eAAe,GAAGjB,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC;IACvCC,gBAAgB,GAAGpB,cAAc,CAACkB,eAAe,EAAE,CAAC,CAAC;IACrDG,YAAY,GAAGD,gBAAgB,CAAC,CAAC,CAAC;IAClCE,eAAe,GAAGF,gBAAgB,CAAC,CAAC,CAAC;EAEzChB,iBAAiB,CAAC,YAAY;IAC5B,IAAI,CAACW,KAAK,EAAE;MACVO,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EACXd,KAAK,CAACS,SAAS,CAAC,YAAY;IAC1B,IAAIK,KAAK,EAAE;MACTO,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,OAAOd,KAAK,CAACsB,aAAa,CAACtB,KAAK,CAACuB,QAAQ,EAAE,IAAI,EAAEH,YAAY,GAAGR,QAAQ,GAAGI,QAAQ,CAAC;AACtF;AAEAX,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGG,KAAK,CAACc,SAAS,GAAG;EACxD;AACF;AACA;EACEZ,QAAQ,EAAEX,SAAS,CAACwB,IAAI,CAACC,UAAU;EAEnC;AACF;AACA;AACA;EACEZ,KAAK,EAAEb,SAAS,CAAC0B,IAAI;EAErB;AACF;AACA;EACEX,QAAQ,EAAEf,SAAS,CAACwB;AACtB,CAAC,GAAG,KAAK,CAAC;AAEV,IAAIpB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC;EACAG,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,GAAGR,SAAS,CAACQ,KAAK,CAACc,SAAS,CAAC;AACtD;AAEA,eAAed,KAAK"},"metadata":{},"sourceType":"module"}