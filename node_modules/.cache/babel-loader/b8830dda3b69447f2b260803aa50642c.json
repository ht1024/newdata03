{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n    /* Styles applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      pointerEvents: 'none',\n      position: 'absolute',\n      backgroundColor: 'currentcolor',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      opacity: 0,\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n    classes = props.classes,\n    className = props.className,\n    focusVisibleClassName = props.focusVisibleClassName,\n    other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","ButtonBase","styles","theme","root","display","textAlign","width","opacity","palette","action","hoverOpacity","focusVisible","focusHighlight","pointerEvents","position","backgroundColor","top","right","bottom","left","transition","transitions","create","duration","short","CardActionArea","forwardRef","props","ref","children","classes","className","focusVisibleClassName","other","createElement","process","env","NODE_ENV","propTypes","node","object","isRequired","string","name"],"sources":["/Users/tristan15/Documents/GitHub/newdata03/node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Styles applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      pointerEvents: 'none',\n      position: 'absolute',\n      backgroundColor: 'currentcolor',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      opacity: 0,\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,wBAAwB,MAAM,gDAAgD;AACrF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAM,CAACC,KAAK,EAAE;EACzC,OAAO;IACL;IACAC,IAAI,EAAE;MACJC,OAAO,EAAE,OAAO;MAChBC,SAAS,EAAE,SAAS;MACpBC,KAAK,EAAE,MAAM;MACb,yBAAyB,EAAE;QACzBC,OAAO,EAAEL,KAAK,CAACM,OAAO,CAACC,MAAM,CAACC;MAChC,CAAC;MACD,gCAAgC,EAAE;QAChCH,OAAO,EAAE;MACX;IACF,CAAC;IAED;IACAI,YAAY,EAAE,CAAC,CAAC;IAEhB;IACAC,cAAc,EAAE;MACdC,aAAa,EAAE,MAAM;MACrBC,QAAQ,EAAE,UAAU;MACpBC,eAAe,EAAE,cAAc;MAC/BC,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,CAAC;MACPZ,OAAO,EAAE,CAAC;MACVa,UAAU,EAAElB,KAAK,CAACmB,WAAW,CAACC,MAAM,CAAC,SAAS,EAAE;QAC9CC,QAAQ,EAAErB,KAAK,CAACmB,WAAW,CAACE,QAAQ,CAACC;MACvC,CAAC;IACH;EACF,CAAC;AACH,CAAC;AACD,IAAIC,cAAc,GAAG7B,KAAK,CAAC8B,UAAU,CAAC,SAASD,cAAc,CAACE,KAAK,EAAEC,GAAG,EAAE;EACxE,IAAIC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IACzBC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,SAAS,GAAGJ,KAAK,CAACI,SAAS;IAC3BC,qBAAqB,GAAGL,KAAK,CAACK,qBAAqB;IACnDC,KAAK,GAAGtC,wBAAwB,CAACgC,KAAK,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,uBAAuB,CAAC,CAAC;EAE1G,OAAO/B,KAAK,CAACsC,aAAa,CAAClC,UAAU,EAAEN,QAAQ,CAAC;IAC9CqC,SAAS,EAAEjC,IAAI,CAACgC,OAAO,CAAC3B,IAAI,EAAE4B,SAAS,CAAC;IACxCC,qBAAqB,EAAElC,IAAI,CAACkC,qBAAqB,EAAEF,OAAO,CAACnB,YAAY,CAAC;IACxEiB,GAAG,EAAEA;EACP,CAAC,EAAEK,KAAK,CAAC,EAAEJ,QAAQ,EAAEjC,KAAK,CAACsC,aAAa,CAAC,MAAM,EAAE;IAC/CH,SAAS,EAAED,OAAO,CAAClB;EACrB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACFuB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGZ,cAAc,CAACa,SAAS,GAAG;EACjE;AACF;AACA;EACET,QAAQ,EAAEhC,SAAS,CAAC0C,IAAI;EAExB;AACF;AACA;AACA;EACET,OAAO,EAAEjC,SAAS,CAAC2C,MAAM,CAACC,UAAU;EAEpC;AACF;AACA;EACEV,SAAS,EAAElC,SAAS,CAAC6C,MAAM;EAE3B;AACF;AACA;EACEV,qBAAqB,EAAEnC,SAAS,CAAC6C;AACnC,CAAC,GAAG,KAAK,CAAC;AACV,eAAe3C,UAAU,CAACE,MAAM,EAAE;EAChC0C,IAAI,EAAE;AACR,CAAC,CAAC,CAAClB,cAAc,CAAC"},"metadata":{},"sourceType":"module"}