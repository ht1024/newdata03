{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\nfunction useMountedRef() {\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n}\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n    _props$mouseEvent = props.mouseEvent,\n    mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n    _props$touchEvent = props.touchEvent,\n    touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n    onClickAway = props.onClickAway;\n  var mountedRef = useMountedRef();\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = React.useCallback(function (event) {\n    // Ignore events that have been `event.preventDefault()` marked.\n    if (event.defaultPrevented) {\n      return;\n    } // IE 11 support, which trigger the handleClickAway even after the unbind\n\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    var node = nodeRef.current; // The child might render null.\n\n    if (!node) {\n      return;\n    }\n    var doc = ownerDocument(node);\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !node.contains(event.target)) {\n      onClickAway(event);\n    }\n  }, [mountedRef, onClickAway]);\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      document.addEventListener(mappedTouchEvent, handleClickAway);\n      document.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        document.removeEventListener(mappedTouchEvent, handleClickAway);\n        document.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      document.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        document.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport default ClickAwayListener;","map":{"version":3,"names":["React","ReactDOM","PropTypes","ownerDocument","useForkRef","elementAcceptingRef","exactProp","useMountedRef","mountedRef","useRef","useEffect","current","mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","_props$mouseEvent","mouseEvent","_props$touchEvent","touchEvent","onClickAway","movedRef","nodeRef","handleOwnRef","useCallback","instance","findDOMNode","handleRef","ref","handleClickAway","event","defaultPrevented","node","doc","documentElement","contains","target","handleTouchMove","mappedTouchEvent","document","addEventListener","removeEventListener","undefined","mappedMouseEvent","createElement","Fragment","cloneElement","process","env","NODE_ENV","propTypes","isRequired","oneOf","func"],"sources":["/Users/tristan15/Documents/GitHub/newdata03/node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport { useForkRef } from '../utils/reactHelpers';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction useMountedRef() {\n  var mountedRef = React.useRef(false);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n}\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent,\n      onClickAway = props.onClickAway;\n  var mountedRef = useMountedRef();\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef);\n  var handleClickAway = React.useCallback(function (event) {\n    // Ignore events that have been `event.preventDefault()` marked.\n    if (event.defaultPrevented) {\n      return;\n    } // IE 11 support, which trigger the handleClickAway even after the unbind\n\n\n    if (!mountedRef.current) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var node = nodeRef.current; // The child might render null.\n\n    if (!node) {\n      return;\n    }\n\n    var doc = ownerDocument(node);\n\n    if (doc.documentElement && doc.documentElement.contains(event.target) && !node.contains(event.target)) {\n      onClickAway(event);\n    }\n  }, [mountedRef, onClickAway]);\n  var handleTouchMove = React.useCallback(function () {\n    movedRef.current = true;\n  }, []);\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      document.addEventListener(mappedTouchEvent, handleClickAway);\n      document.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        document.removeEventListener(mappedTouchEvent, handleClickAway);\n        document.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, handleTouchMove, touchEvent]);\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      document.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        document.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return React.createElement(React.Fragment, null, React.cloneElement(children, {\n    ref: handleRef\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchStart', 'onTouchEnd', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;"],"mappings":"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"},"metadata":{},"sourceType":"module"}