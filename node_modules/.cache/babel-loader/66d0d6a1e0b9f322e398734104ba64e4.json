{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react'; // This variable will be true once the server-side hydration is completed.\n\nvar hydrationCompleted = false;\n\nfunction deepEqual(a, b) {\n  return a.length === b.length && a.every(function (item, index) {\n    return item === b[index];\n  });\n}\n\nfunction useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var multiple = Array.isArray(queryInput);\n  var queries = multiple ? queryInput : [queryInput];\n  queries = queries.map(function (query) {\n    return query.replace('@media ', '');\n  });\n  var _options$defaultMatch = options.defaultMatches,\n      defaultMatches = _options$defaultMatch === void 0 ? false : _options$defaultMatch,\n      _options$noSsr = options.noSsr,\n      noSsr = _options$noSsr === void 0 ? false : _options$noSsr,\n      _options$ssrMatchMedi = options.ssrMatchMedia,\n      ssrMatchMedia = _options$ssrMatchMedi === void 0 ? null : _options$ssrMatchMedi;\n\n  var _React$useState = React.useState(function () {\n    if (hydrationCompleted || noSsr) {\n      return queries.map(function (query) {\n        return window.matchMedia(query).matches;\n      });\n    }\n\n    if (ssrMatchMedia) {\n      return queries.map(function (query) {\n        return ssrMatchMedia(query).matches;\n      });\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return queries.map(function () {\n      return defaultMatches;\n    });\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      matches = _React$useState2[0],\n      setMatches = _React$useState2[1];\n\n  React.useEffect(function () {\n    hydrationCompleted = true;\n    var queryLists = queries.map(function (query) {\n      return window.matchMedia(query);\n    });\n    setMatches(function (prev) {\n      var next = queryLists.map(function (queryList) {\n        return queryList.matches;\n      });\n      return deepEqual(prev, next) ? prev : next;\n    });\n\n    function handleMatchesChange() {\n      setMatches(queryLists.map(function (queryList) {\n        return queryList.matches;\n      }));\n    }\n\n    queryLists.forEach(function (queryList) {\n      queryList.addListener(handleMatchesChange);\n    });\n    return function () {\n      queryLists.forEach(function (queryList) {\n        queryList.removeListener(handleMatchesChange);\n      });\n    };\n  }, queries); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return multiple ? matches : matches[0];\n}\n\nexport function testReset() {\n  hydrationCompleted = false;\n}\nexport default useMediaQuery;","map":{"version":3,"sources":["/Users/tristan2020/Documents/test folder/newdata03/node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js"],"names":["_slicedToArray","React","hydrationCompleted","deepEqual","a","b","length","every","item","index","useMediaQuery","queryInput","options","arguments","undefined","multiple","Array","isArray","queries","map","query","replace","_options$defaultMatch","defaultMatches","_options$noSsr","noSsr","_options$ssrMatchMedi","ssrMatchMedia","_React$useState","useState","window","matchMedia","matches","_React$useState2","setMatches","useEffect","queryLists","prev","next","queryList","handleMatchesChange","forEach","addListener","removeListener","testReset"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react'; // This variable will be true once the server-side hydration is completed.\n\nvar hydrationCompleted = false;\n\nfunction deepEqual(a, b) {\n  return a.length === b.length && a.every(function (item, index) {\n    return item === b[index];\n  });\n}\n\nfunction useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var multiple = Array.isArray(queryInput);\n  var queries = multiple ? queryInput : [queryInput];\n  queries = queries.map(function (query) {\n    return query.replace('@media ', '');\n  });\n  var _options$defaultMatch = options.defaultMatches,\n      defaultMatches = _options$defaultMatch === void 0 ? false : _options$defaultMatch,\n      _options$noSsr = options.noSsr,\n      noSsr = _options$noSsr === void 0 ? false : _options$noSsr,\n      _options$ssrMatchMedi = options.ssrMatchMedia,\n      ssrMatchMedia = _options$ssrMatchMedi === void 0 ? null : _options$ssrMatchMedi;\n\n  var _React$useState = React.useState(function () {\n    if (hydrationCompleted || noSsr) {\n      return queries.map(function (query) {\n        return window.matchMedia(query).matches;\n      });\n    }\n\n    if (ssrMatchMedia) {\n      return queries.map(function (query) {\n        return ssrMatchMedia(query).matches;\n      });\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return queries.map(function () {\n      return defaultMatches;\n    });\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      matches = _React$useState2[0],\n      setMatches = _React$useState2[1];\n\n  React.useEffect(function () {\n    hydrationCompleted = true;\n    var queryLists = queries.map(function (query) {\n      return window.matchMedia(query);\n    });\n    setMatches(function (prev) {\n      var next = queryLists.map(function (queryList) {\n        return queryList.matches;\n      });\n      return deepEqual(prev, next) ? prev : next;\n    });\n\n    function handleMatchesChange() {\n      setMatches(queryLists.map(function (queryList) {\n        return queryList.matches;\n      }));\n    }\n\n    queryLists.forEach(function (queryList) {\n      queryList.addListener(handleMatchesChange);\n    });\n    return function () {\n      queryLists.forEach(function (queryList) {\n        queryList.removeListener(handleMatchesChange);\n      });\n    };\n  }, queries); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return multiple ? matches : matches[0];\n}\n\nexport function testReset() {\n  hydrationCompleted = false;\n}\nexport default useMediaQuery;"]},"metadata":{},"sourceType":"module"}