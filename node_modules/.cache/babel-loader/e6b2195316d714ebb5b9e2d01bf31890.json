{"ast":null,"code":"import { supportedKeyframes, supportedProperty, supportedValue } from 'css-vendor';\nimport { toCssValue } from 'jss';\n/**\n * Add vendor prefix to a property name when needed.\n *\n * @api public\n */\n\nfunction jssVendorPrefixer() {\n  function onProcessRule(rule) {\n    if (rule.type === 'keyframes') {\n      var atRule = rule;\n      atRule.at = supportedKeyframes(atRule.at);\n    }\n  }\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n\n    for (var prop in style) {\n      var value = style[prop];\n      var changeProp = false;\n      var supportedProp = supportedProperty(prop);\n      if (supportedProp && supportedProp !== prop) changeProp = true;\n      var changeValue = false;\n      var supportedValue$$1 = supportedValue(supportedProp, toCssValue(value));\n      if (supportedValue$$1 && supportedValue$$1 !== value) changeValue = true;\n\n      if (changeProp || changeValue) {\n        if (changeProp) delete style[prop];\n        style[supportedProp || prop] = supportedValue$$1 || value;\n      }\n    }\n\n    return style;\n  }\n\n  function onChangeValue(value, prop) {\n    return supportedValue(prop, toCssValue(value)) || value;\n  }\n\n  return {\n    onProcessRule: onProcessRule,\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssVendorPrefixer;","map":{"version":3,"sources":["/Users/tristan2020/Documents/GitHub/newdata03/material-kit-react-master/node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js"],"names":["supportedKeyframes","supportedProperty","supportedValue","toCssValue","jssVendorPrefixer","onProcessRule","rule","type","atRule","at","onProcessStyle","style","prop","value","changeProp","supportedProp","changeValue","supportedValue$$1","onChangeValue"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,iBAA7B,EAAgDC,cAAhD,QAAsE,YAAtE;AACA,SAASC,UAAT,QAA2B,KAA3B;AAEA;;;;;;AAMA,SAASC,iBAAT,GAA6B;AAC3B,WAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAIA,IAAI,CAACC,IAAL,KAAc,WAAlB,EAA+B;AAC7B,UAAIC,MAAM,GAAGF,IAAb;AACAE,MAAAA,MAAM,CAACC,EAAP,GAAYT,kBAAkB,CAACQ,MAAM,CAACC,EAAR,CAA9B;AACD;AACF;;AAED,WAASC,cAAT,CAAwBC,KAAxB,EAA+BL,IAA/B,EAAqC;AACnC,QAAIA,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B,OAAOI,KAAP;;AAE3B,SAAK,IAAIC,IAAT,IAAiBD,KAAjB,EAAwB;AACtB,UAAIE,KAAK,GAAGF,KAAK,CAACC,IAAD,CAAjB;AACA,UAAIE,UAAU,GAAG,KAAjB;AACA,UAAIC,aAAa,GAAGd,iBAAiB,CAACW,IAAD,CAArC;AACA,UAAIG,aAAa,IAAIA,aAAa,KAAKH,IAAvC,EAA6CE,UAAU,GAAG,IAAb;AAC7C,UAAIE,WAAW,GAAG,KAAlB;AACA,UAAIC,iBAAiB,GAAGf,cAAc,CAACa,aAAD,EAAgBZ,UAAU,CAACU,KAAD,CAA1B,CAAtC;AACA,UAAII,iBAAiB,IAAIA,iBAAiB,KAAKJ,KAA/C,EAAsDG,WAAW,GAAG,IAAd;;AAEtD,UAAIF,UAAU,IAAIE,WAAlB,EAA+B;AAC7B,YAAIF,UAAJ,EAAgB,OAAOH,KAAK,CAACC,IAAD,CAAZ;AAChBD,QAAAA,KAAK,CAACI,aAAa,IAAIH,IAAlB,CAAL,GAA+BK,iBAAiB,IAAIJ,KAApD;AACD;AACF;;AAED,WAAOF,KAAP;AACD;;AAED,WAASO,aAAT,CAAuBL,KAAvB,EAA8BD,IAA9B,EAAoC;AAClC,WAAOV,cAAc,CAACU,IAAD,EAAOT,UAAU,CAACU,KAAD,CAAjB,CAAd,IAA2CA,KAAlD;AACD;;AAED,SAAO;AACLR,IAAAA,aAAa,EAAEA,aADV;AAELK,IAAAA,cAAc,EAAEA,cAFX;AAGLQ,IAAAA,aAAa,EAAEA;AAHV,GAAP;AAKD;;AAED,eAAed,iBAAf","sourcesContent":["import { supportedKeyframes, supportedProperty, supportedValue } from 'css-vendor';\nimport { toCssValue } from 'jss';\n\n/**\n * Add vendor prefix to a property name when needed.\n *\n * @api public\n */\n\nfunction jssVendorPrefixer() {\n  function onProcessRule(rule) {\n    if (rule.type === 'keyframes') {\n      var atRule = rule;\n      atRule.at = supportedKeyframes(atRule.at);\n    }\n  }\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n\n    for (var prop in style) {\n      var value = style[prop];\n      var changeProp = false;\n      var supportedProp = supportedProperty(prop);\n      if (supportedProp && supportedProp !== prop) changeProp = true;\n      var changeValue = false;\n      var supportedValue$$1 = supportedValue(supportedProp, toCssValue(value));\n      if (supportedValue$$1 && supportedValue$$1 !== value) changeValue = true;\n\n      if (changeProp || changeValue) {\n        if (changeProp) delete style[prop];\n        style[supportedProp || prop] = supportedValue$$1 || value;\n      }\n    }\n\n    return style;\n  }\n\n  function onChangeValue(value, prop) {\n    return supportedValue(prop, toCssValue(value)) || value;\n  }\n\n  return {\n    onProcessRule: onProcessRule,\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssVendorPrefixer;\n"]},"metadata":{},"sourceType":"module"}