{"ast":null,"code":"/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n    overflow = _getStyleComputedProp.overflow,\n    overflowX = _getStyleComputedProp.overflowX,\n    overflowY = _getStyleComputedProp.overflowY;\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n  return getScrollParent(getParentNode(element));\n}\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n  var nodeName = offsetParent && offsetParent.nodeName;\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n  return offsetParent;\n}\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n};\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n  return getClientRect(result);\n}\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n  return offsets;\n}\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = {\n    top: 0,\n    left: 0\n  };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n        height = _getWindowSizes.height,\n        width = _getWindowSizes.width;\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n  return boundaries;\n}\nfunction getArea(_ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n      height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  var variation = placement.split('-')[1];\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n      data = fn(data, modifier);\n    }\n  });\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n      enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, {\n    passive: true\n  });\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, {\n    passive: true\n  });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, {\n    position: options.positionFixed ? 'fixed' : 'absolute'\n  });\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var round = Math.round,\n    floor = Math.floor;\n  var noRound = function noRound(v) {\n    return v;\n  };\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n    y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n    top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n  var flipOrder = [];\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n    _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var basePlacement = placement.split('-')[0];\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n    left = popperStyles.left,\n    transform = popperStyles[transformProp];\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n  options.boundaries = boundaries;\n  var order = options.priority;\n  var popper = data.offsets.popper;\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n  data.offsets.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n      reference = _data$offsets.reference,\n      popper = _data$offsets.popper;\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n    popper = _data$offsets.popper,\n    reference = _data$offsets.reference;\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n  }]);\n\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\nexport default Popper;","map":{"version":3,"sources":["../../src/utils/isBrowser.js","../../src/utils/debounce.js","../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/getWindow.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/modifiers/applyStyle.js","../../src/utils/getRoundedOffsets.js","../../src/modifiers/computeStyle.js","../../src/utils/isModifierRequired.js","../../src/modifiers/arrow.js","../../src/utils/getOppositeVariation.js","../../src/methods/placements.js","../../src/utils/clockwise.js","../../src/modifiers/flip.js","../../src/modifiers/keepTogether.js","../../src/modifiers/offset.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/shift.js","../../src/modifiers/hide.js","../../src/modifiers/inner.js","../../src/modifiers/index.js","../../src/methods/defaults.js","../../src/index.js"],"names":["window","document","longerTimeoutBrowsers","timeoutDuration","i","length","isBrowser","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","undefined","slice","forEach","warn","enabled","update","isDestroyed","options","positionFixed","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","attributes","setAttribute","applyStyle","instance","arrowElement","Object","arrowStyles","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","validPlacements","placements","clockwise","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Popper","debounce","bind","Defaults","jquery","onLoad","requestAnimationFrame","Utils","global","PopperUtils"],"mappings":"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","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]},"metadata":{},"sourceType":"module"}