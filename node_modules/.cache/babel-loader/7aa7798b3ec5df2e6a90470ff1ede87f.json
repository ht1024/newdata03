{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getDisplayName } from '@material-ui/utils';\n/**\n * Enables ref forwarding on a given component that uses `innerRef` to forward refs\n * This is useful for component implementations that predate `forwardRef` and\n * used other props to forward refs.\n *\n * Instead of `<Component innerRef={ref} />` you can write\n * `<withForwardRef(Component) ref={ref} />`.\n *\n * This HOC does not handle prop collision. In\n * `<withForwardRef(Component) ref={ref} innerRef={innerRef} />` `innerRef` will be dropped\n *\n * Only copies statics from material-ui over.\n *\n * @param {React.ComponentType} Component\n * @returns {React.ForwardRefComponent}\n */\n\nexport default function withForwardedRef(Component) {\n  var ForwardRefComponent = React.forwardRef(function (props, ref) {\n    return (\n      // We expect this component to be wrapped in `withStyles` in which `innerRef`\n      // is already intercepted and therefore won't appear in `props` here.\n      React.createElement(Component, _extends({}, props, {\n        innerRef: ref\n      }))\n    );\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    ForwardRefComponent.displayName = \"ForwardRef(\".concat(getDisplayName(Component), \")\");\n  }\n  return hoistNonReactStatics(ForwardRefComponent, Component);\n}","map":{"version":3,"names":["_extends","React","hoistNonReactStatics","getDisplayName","withForwardedRef","Component","ForwardRefComponent","forwardRef","props","ref","createElement","innerRef","process","env","NODE_ENV","displayName","concat"],"sources":["/Users/tristan15/Documents/GitHub/newdata03/node_modules/@material-ui/core/esm/utils/withForwardedRef.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getDisplayName } from '@material-ui/utils';\n/**\n * Enables ref forwarding on a given component that uses `innerRef` to forward refs\n * This is useful for component implementations that predate `forwardRef` and\n * used other props to forward refs.\n *\n * Instead of `<Component innerRef={ref} />` you can write\n * `<withForwardRef(Component) ref={ref} />`.\n *\n * This HOC does not handle prop collision. In\n * `<withForwardRef(Component) ref={ref} innerRef={innerRef} />` `innerRef` will be dropped\n *\n * Only copies statics from material-ui over.\n *\n * @param {React.ComponentType} Component\n * @returns {React.ForwardRefComponent}\n */\n\nexport default function withForwardedRef(Component) {\n  var ForwardRefComponent = React.forwardRef(function (props, ref) {\n    return (// We expect this component to be wrapped in `withStyles` in which `innerRef`\n      // is already intercepted and therefore won't appear in `props` here.\n      React.createElement(Component, _extends({}, props, {\n        innerRef: ref\n      }))\n    );\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    ForwardRefComponent.displayName = \"ForwardRef(\".concat(getDisplayName(Component), \")\");\n  }\n\n  return hoistNonReactStatics(ForwardRefComponent, Component);\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,SAASC,cAAc,QAAQ,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,gBAAgB,CAACC,SAAS,EAAE;EAClD,IAAIC,mBAAmB,GAAGL,KAAK,CAACM,UAAU,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;IAC/D;MAAQ;MACN;MACAR,KAAK,CAACS,aAAa,CAACL,SAAS,EAAEL,QAAQ,CAAC,CAAC,CAAC,EAAEQ,KAAK,EAAE;QACjDG,QAAQ,EAAEF;MACZ,CAAC,CAAC;IAAC;EAEP,CAAC,CAAC;EAEF,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCR,mBAAmB,CAACS,WAAW,GAAG,aAAa,CAACC,MAAM,CAACb,cAAc,CAACE,SAAS,CAAC,EAAE,GAAG,CAAC;EACxF;EAEA,OAAOH,oBAAoB,CAACI,mBAAmB,EAAED,SAAS,CAAC;AAC7D"},"metadata":{},"sourceType":"module"}